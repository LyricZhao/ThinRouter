package Common;

function logic [3:0] one_hot4;
    input logic [1:0] val;
begin
    case (val)
        0: one_hot4 = 4'b0001;
        1: one_hot4 = 4'b0010;
        2: one_hot4 = 4'b0100;
        3: one_hot4 = 4'b1000;
    endcase
end
endfunction

function logic [31:0] get_mask;
    input logic [5:0] len;
begin
    case (len)
        0 : get_mask = 32'h00000000;
        1 : get_mask = 32'h80000000;
        2 : get_mask = 32'hC0000000;
        3 : get_mask = 32'hE0000000;
        4 : get_mask = 32'hF0000000;
        5 : get_mask = 32'hF8000000;
        6 : get_mask = 32'hFC000000;
        7 : get_mask = 32'hFE000000;
        8 : get_mask = 32'hFF000000;
        9 : get_mask = 32'hFF800000;
        10: get_mask = 32'hFFC00000;
        11: get_mask = 32'hFFE00000;
        12: get_mask = 32'hFFF00000;
        13: get_mask = 32'hFFF80000;
        14: get_mask = 32'hFFFC0000;
        15: get_mask = 32'hFFFE0000;
        16: get_mask = 32'hFFFF0000;
        17: get_mask = 32'hFFFF8000;
        18: get_mask = 32'hFFFFC000;
        19: get_mask = 32'hFFFFE000;
        20: get_mask = 32'hFFFFF000;
        21: get_mask = 32'hFFFFF800;
        22: get_mask = 32'hFFFFFC00;
        23: get_mask = 32'hFFFFFE00;
        24: get_mask = 32'hFFFFFF00;
        25: get_mask = 32'hFFFFFF80;
        26: get_mask = 32'hFFFFFFC0;
        27: get_mask = 32'hFFFFFFE0;
        28: get_mask = 32'hFFFFFFF0;
        29: get_mask = 32'hFFFFFFF8;
        30: get_mask = 32'hFFFFFFFC;
        31: get_mask = 32'hFFFFFFFE;
        32: get_mask = 32'hFFFFFFFF;
        default: get_mask = '0;
    endcase
end
endfunction

function logic [5:0] leading0;
    input logic [31:0] ip;
begin
    casez (ip)
        32'b1???????_????????_????????_????????: leading0 = 0;
        32'b01??????_????????_????????_????????: leading0 = 1;
        32'b001?????_????????_????????_????????: leading0 = 2;
        32'b0001????_????????_????????_????????: leading0 = 3;
        32'b00001???_????????_????????_????????: leading0 = 4;
        32'b000001??_????????_????????_????????: leading0 = 5;
        32'b0000001?_????????_????????_????????: leading0 = 6;
        32'b00000001_????????_????????_????????: leading0 = 7;
        32'b00000000_1???????_????????_????????: leading0 = 8;
        32'b00000000_01??????_????????_????????: leading0 = 9;
        32'b00000000_001?????_????????_????????: leading0 = 10;
        32'b00000000_0001????_????????_????????: leading0 = 11;
        32'b00000000_00001???_????????_????????: leading0 = 12;
        32'b00000000_000001??_????????_????????: leading0 = 13;
        32'b00000000_0000001?_????????_????????: leading0 = 14;
        32'b00000000_00000001_????????_????????: leading0 = 15;
        32'b00000000_00000000_1???????_????????: leading0 = 16;
        32'b00000000_00000000_01??????_????????: leading0 = 17;
        32'b00000000_00000000_001?????_????????: leading0 = 18;
        32'b00000000_00000000_0001????_????????: leading0 = 19;
        32'b00000000_00000000_00001???_????????: leading0 = 20;
        32'b00000000_00000000_000001??_????????: leading0 = 21;
        32'b00000000_00000000_0000001?_????????: leading0 = 22;
        32'b00000000_00000000_00000001_????????: leading0 = 23;
        32'b00000000_00000000_00000000_1???????: leading0 = 24;
        32'b00000000_00000000_00000000_01??????: leading0 = 25;
        32'b00000000_00000000_00000000_001?????: leading0 = 26;
        32'b00000000_00000000_00000000_0001????: leading0 = 27;
        32'b00000000_00000000_00000000_00001???: leading0 = 28;
        32'b00000000_00000000_00000000_000001??: leading0 = 29;
        32'b00000000_00000000_00000000_0000001?: leading0 = 30;
        32'b00000000_00000000_00000000_00000001: leading0 = 31;
        32'b00000000_00000000_00000000_00000000: leading0 = 32;
    endcase
end
endfunction

endpackage